Parameters:
  NameOfService:
    Description: "The name of the service to be used by the stack"
    Type: String
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  KeyName:
    Description: "name of EC2 key value"
    Type: AWS::EC2::KeyPair::KeyName
Mappings:
  AmiRegionMap:
    us-east-1:
      AMI: "ami-06ca3ca175f37dd66"
    us-east-2:
      AMI: "ami-069d73f3235b535bd"
    us-west-1:
      AMI: "ami-0fd61683ae1a27a64"
    us-west-2:
      AMI: "ami-0507f77897697c4ba"
Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      ImageId: !FindInMap
         - AmiRegionMap
         - !Ref AWS::Region
         - AMI
      Tags:
        - Key: "Name"
          Value: !Join ["-", [my, first, Instance, from, cloudformation]]
      SecurityGroups:
        - !Ref vprofileSG
  vprofileSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow connections from http and ssh to client host
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 192.168.30.178/32